# Deploy contínuo de FTP 
# Pode ser usado normalmente para PHP, HTML, CSS, JavaScript, SVG e todo tipo de arquivo

# Para usar configure os segredos:
# FTP_SERVER
# FTP_USERNAME
# FTP_PASSWORD

name: Deploy via FTP

on:
  push:
    branches:
      - main  # Substitua pelo branch que deseja monitorar

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set environment variables
      run: |
        echo "FTP_SERVER=${{ secrets.FTP_SERVER }}" >> $GITHUB_ENV
        echo "FTP_USERNAME=${{ secrets.FTP_USERNAME }}" >> $GITHUB_ENV
        echo "FTP_PASSWORD=${{ secrets.FTP_PASSWORD }}" >> $GITHUB_ENV
        echo "LOCAL_DIR=./cursodash" >> $GITHUB_ENV  # Defina o diretório local aqui
        echo "REMOTE_DIR=/sge-test.ebs.great-site.net/htdocs" >> $GITHUB_ENV  # Defina o diretório remoto aqui

    - name: Debug commits
      run: |
        echo "Current SHA: ${{ github.sha }}"
        echo "Previous SHA: ${{ github.event.before }}"
        git fetch --all
        git log -n 5 --oneline

    - name: Get changed files
      id: changes
      run: |
        git fetch --all
        # Verificar se os commits existem
        if git cat-file -e ${{ github.event.before }} && git cat-file -e ${{ github.sha }}; then
          # Obtém apenas arquivos modificados na pasta especificada (ex: ./cursodash)
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- ${{ env.LOCAL_DIR }} > changes.txt
          # Exclui conexao.php da lista de arquivos modificados
          grep -v 'conexao.php' changes.txt > filtered_changes.txt
          cat filtered_changes.txt
        else
          echo "Um ou ambos os commits não existem no repositório. Tentando uma abordagem alternativa..."
          # Tentando uma abordagem alternativa caso os commits não existam
          git diff --name-only HEAD~1 HEAD -- ${{ env.LOCAL_DIR }} > changes.txt
          grep -v 'conexao.php' changes.txt > filtered_changes.txt
          cat filtered_changes.txt
        fi

    - name: Install lftp
      run: sudo apt-get install lftp

    - name: Upload changed files via FTP
      run: |
        while read file; do
          # Remove o caminho relativo do diretório base
          base_file=$(echo $file | sed 's|^${{ env.LOCAL_DIR }}/||')
          # Faz o upload para o diretório remoto especificado
          lftp -u $FTP_USERNAME,$FTP_PASSWORD $FTP_SERVER -e "put -O $REMOTE_DIR/$base_file $file; bye"
        done < filtered_changes.txt
